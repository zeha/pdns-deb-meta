#!/bin/bash
set -ex
git clean -fdx

REMOTE="https://autotest.powerdns.com/job/auth-git/lastSuccessfulBuild"

FILES=$(curl -sk $REMOTE/api/json | python -c "import json, sys; atfcs = json.loads(sys.stdin.read())['artifacts']; print '\n'.join(sorted(set([atfc['relativePath'] for atfc in atfcs])))")

for f in $FILES; do
  fn=$(basename $f)
  if [[ $fn == pdns*.tar.gz ]] ; then
    curl -kO "$REMOTE/artifact/$fn"
    break
  fi
done

PDNS_DIR=pdns
rm -rf ${PDNS_DIR} && mkdir ${PDNS_DIR}
tar -C ${PDNS_DIR} -xf $fn --strip-components=1

# copy the 'good' packaging files over
rsync -ravH --delete pkg-pdns/debian/ pdns/debian/

# no git-buildpackage here
rm -f debian/gbp.conf

UPSTREAM_VERSION=$(dpkg-parsechangelog -l${PDNS_DIR}/debian-pdns/changelog | awk '/^Version/{print $2}' | sed -e 's/-1$//')

# fix our changelog
cat >${PDNS_DIR}/debian/changelog <<EOT
pdns (${UPSTREAM_VERSION}-0+autotest) autotest; urgency=medium

  * Automated build based on upstream version ${UPSTREAM_VERSION}.

 -- Namespace Autobuild <inhuman@namespace.at>  $(date --rfc-2822)
EOT

# assume we don't need any patches
echo>${PDNS_DIR}/debian/patches/series

# make an orig.tgz
ln -s $fn pdns_${UPSTREAM_VERSION}.orig.tar.gz

# go build debian sources
dpkg-source -i -I -b ${PDNS_DIR}

